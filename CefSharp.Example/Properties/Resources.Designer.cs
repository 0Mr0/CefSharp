//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CefSharp.Example.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CefSharp.Example.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;
        ///&lt;html&gt;
        ///	&lt;head&gt;
        ///		&lt;title&gt;Binding Test&lt;/title&gt;
        ///	&lt;/head&gt;
        ///	&lt;body&gt;
        ///	    &lt;p&gt;
        ///	    Result of calling bound.repeat(&quot;hi &quot;, 5) =
        ///	    &lt;script type=&quot;text/javascript&quot;&gt;
        ///	        var result = bound.repeat(&quot;hi &quot;, 5);
        ///	        document.write(&apos;&quot;&apos; + result + &apos;&quot;&apos;);
        ///	        if(result == &quot;hi hi hi hi hi &quot;)
        ///	        {
        ///	            document.write(&quot; SUCCESS&quot;);
        ///	        }
        ///	        else
        ///	        {
        ///	            document.write(&quot; FAIL!&quot;);
        ///	        }
        ///	    &lt;/script&gt;
        ///	    &lt;/p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BindingTest {
            get {
                return ResourceManager.GetString("BindingTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*!
        /// * Bootstrap v3.0.0
        /// *
        /// * Copyright 2013 Twitter, Inc
        /// * Licensed under the Apache License v2.0
        /// * http://www.apache.org/licenses/LICENSE-2.0
        /// *
        /// * Designed and built with all the love in the world by @mdo and @fat.
        /// *//*! normalize.css v2.1.0 | MIT License | git.io/normalize */article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,video{display:inline-block}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-family:sans-s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string bootstrap_min_css {
            get {
                return ResourceManager.GetString("bootstrap_min_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        ///* bootstrap.js v3.0.0 by @fat and @mdo
        ///* Copyright 2013 Twitter Inc.
        ///* http://www.apache.org/licenses/LICENSE-2.0
        ///*/
        ///if(!jQuery)throw new Error(&quot;Bootstrap requires jQuery&quot;);+function(a){&quot;use strict&quot;;function b(){var a=document.createElement(&quot;bootstrap&quot;),b={WebkitTransition:&quot;webkitTransitionEnd&quot;,MozTransition:&quot;transitionend&quot;,OTransition:&quot;oTransitionEnd otransitionend&quot;,transition:&quot;transitionend&quot;};for(var c in b)if(void 0!==a.style[c])return{end:b[c]}}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string bootstrap_min_js {
            get {
                return ResourceManager.GetString("bootstrap_min_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .btn-default,.btn-primary,.btn-success,.btn-info,.btn-warning,.btn-danger{text-shadow:0 -1px 0 rgba(0,0,0,0.2);-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,0.15),0 1px 1px rgba(0,0,0,0.075);box-shadow:inset 0 1px 0 rgba(255,255,255,0.15),0 1px 1px rgba(0,0,0,0.075)}.btn-default:active,.btn-primary:active,.btn-success:active,.btn-info:active,.btn-warning:active,.btn-danger:active,.btn-default.active,.btn-primary.active,.btn-success.active,.btn-info.active,.btn-warning.active,.btn-danger.active{-webkit-b [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string bootstrap_theme_min_css {
            get {
                return ResourceManager.GetString("bootstrap_theme_min_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///
        ///&lt;html lang=&quot;en&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;utf-8&quot; /&gt;
        ///    &lt;title&gt;CefSharp&lt;/title&gt;
        ///    &lt;style type=&quot;text/css&quot;&gt;
        ///        *
        ///        {
        ///            font-family: Verdana;
        ///        }
        ///    &lt;/style&gt;
        ///&lt;/head&gt;
        ///&lt;body&gt;
        ///    Home is where your heart is.
        ///&lt;/body&gt;
        ///&lt;/html&gt;.
        /// </summary>
        internal static string Home {
            get {
                return ResourceManager.GetString("Home", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;
        ///&lt;html&gt;
        ///	&lt;head&gt;
        ///		&lt;title&gt;Popup Test&lt;/title&gt;
        ///	&lt;/head&gt;
        ///	&lt;body&gt;
        ///        &lt;a href=&quot;https://github.com/perlun/CefSharp&quot; target=&quot;_blank&quot;&gt;target=_blank&lt;/a&gt;
        ///        &lt;br /&gt;
        ///        &lt;a href=&quot;#&quot; onclick=&quot;window.open(&apos;https://github.com/perlun/CefSharp&apos;)&quot;&gt;window.open()&lt;/a&gt;
        ///	&lt;/body&gt;
        ///&lt;/html&gt;
        ///.
        /// </summary>
        internal static string PopupTest {
            get {
                return ResourceManager.GetString("PopupTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;
        ///&lt;html&gt;
        ///	&lt;head&gt;
        ///		&lt;title&gt;Scheme Handler Test&lt;/title&gt;
        ///	&lt;/head&gt;
        ///	&lt;body&gt;
        ///	&lt;h1&gt;Success&lt;/h1&gt;
        ///	&lt;p&gt;Scheme Handler Functioned Correctly&lt;/p&gt;
        ///	&lt;/body&gt;
        ///&lt;/html&gt;.
        /// </summary>
        internal static string SchemeTest {
            get {
                return ResourceManager.GetString("SchemeTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;
        ///&lt;html&gt;
        ///	&lt;head&gt;
        ///		&lt;title&gt;Scheme Handler Test&lt;/title&gt;
        ///	&lt;/head&gt;
        ///	&lt;body&gt;
        ///        &lt;form&gt;
        ///            &lt;input type=&quot;text&quot; size=25 title=&quot;This is the first tooltip&quot;&gt;
        ///            &lt;br /&gt;
        ///            &lt;input type=&quot;text&quot; size=25 title=&quot;This is the second tooltip&quot;&gt;
        ///            &lt;br /&gt;
        ///            &lt;select&gt;
        ///                &lt;option selected&gt;test&lt;/option&gt;
        ///                &lt;option&gt;one&lt;/option&gt;
        ///                &lt;option&gt;two&lt;/option&gt;
        ///            &lt;/select&gt;
        ///        &lt;/form [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TooltipTest {
            get {
                return ResourceManager.GetString("TooltipTest", resourceCulture);
            }
        }
    }
}
