Index: libcef_dll/cpptoc/frame_cpptoc.cc
===================================================================
--- libcef_dll/cpptoc/frame_cpptoc.cc	(revision 402)
+++ libcef_dll/cpptoc/frame_cpptoc.cc	(working copy)
@@ -176,6 +176,17 @@
       CefString(scriptUrl), startLine);
 }
 
+cef_string_userfree_t CEF_CALLBACK frame_evaluate_java_script(struct _cef_frame_t* self,
+    const cef_string_t* jsCode, long timeout)
+{
+  DCHECK(self);
+  if (!self)
+    return 0;
+
+  CefString resultStr = CefFrameCppToC::Get(self)->EvaluateJavaScript(CefString(jsCode), timeout);
+  return resultStr.DetachToUserFree();
+}
+
 int CEF_CALLBACK frame_is_main(struct _cef_frame_t* self)
 {
   DCHECK(self);
@@ -275,6 +286,7 @@
   struct_.struct_.load_string = frame_load_string;
   struct_.struct_.load_stream = frame_load_stream;
   struct_.struct_.execute_java_script = frame_execute_java_script;
+  struct_.struct_.evaluate_java_script = frame_evaluate_java_script;
   struct_.struct_.is_main = frame_is_main;
   struct_.struct_.is_focused = frame_is_focused;
   struct_.struct_.get_name = frame_get_name;
Index: libcef_dll/ctocpp/frame_ctocpp.cc
===================================================================
--- libcef_dll/ctocpp/frame_ctocpp.cc	(revision 402)
+++ libcef_dll/ctocpp/frame_ctocpp.cc	(working copy)
@@ -158,6 +158,19 @@
       scriptUrl.GetStruct(), startLine);
 }
 
+CefString CefFrameCToCpp::EvaluateJavaScript(const CefString& jsCode,
+    long timeout)
+{
+  CefString str;
+  if (CEF_MEMBER_MISSING(struct_, evaluate_java_script))
+      return str;
+
+  cef_string_userfree_t strPtr = struct_->evaluate_java_script(struct_, jsCode.GetStruct(),
+      timeout);
+  str.AttachToUserFree(strPtr);
+  return str;
+}
+
 bool CefFrameCToCpp::IsMain()
 {
   if(CEF_MEMBER_MISSING(struct_, is_main))
Index: libcef_dll/ctocpp/frame_ctocpp.h
===================================================================
--- libcef_dll/ctocpp/frame_ctocpp.h	(revision 402)
+++ libcef_dll/ctocpp/frame_ctocpp.h	(working copy)
@@ -50,6 +50,8 @@
       const CefString& url) OVERRIDE;
   virtual void ExecuteJavaScript(const CefString& jsCode,
       const CefString& scriptUrl, int startLine) OVERRIDE;
+  virtual CefString EvaluateJavaScript(const CefString& jsCode,
+      long timeout) OVERRIDE;
   virtual bool IsMain() OVERRIDE;
   virtual bool IsFocused() OVERRIDE;
   virtual CefString GetName() OVERRIDE;
Index: include/cef_capi.h
===================================================================
--- include/cef_capi.h	(revision 402)
+++ include/cef_capi.h	(working copy)
@@ -854,6 +854,12 @@
       int startLine);
 
   ///
+  // XXX. This function should only be called on the UI thread.
+  ///
+  cef_string_userfree_t (CEF_CALLBACK *evaluate_java_script)(struct _cef_frame_t* self,
+      const cef_string_t* jsCode, long timeout);
+
+  ///
   // Returns true (1) if this is the main frame.
   ///
   int (CEF_CALLBACK *is_main)(struct _cef_frame_t* self);
Index: include/cef.h
===================================================================
--- include/cef.h	(revision 402)
+++ include/cef.h	(working copy)
@@ -1019,6 +1019,13 @@
                                  int startLine) =0;
 
   ///
+  // XXX. This method should only be called on the UI thread.
+  ////
+  /*--cef()--*/
+  virtual CefString EvaluateJavaScript(const CefString& jsCode,
+                                       long timeout) =0;
+
+  ///
   // Returns true if this is the main frame.
   ///
   /*--cef()--*/
Index: libcef/browser_impl.h
===================================================================
--- libcef/browser_impl.h	(revision 402)
+++ libcef/browser_impl.h	(working copy)
@@ -134,6 +134,9 @@
                          const CefString& jsCode, 
                          const CefString& scriptUrl,
                          int startLine);
+  CefString EvaluateJavaScript(CefRefPtr<CefFrame> frame,
+                               const CefString& jsCode,
+                               long timeout);
   CefString GetURL(CefRefPtr<CefFrame> frame);
 
   // CefFrames are light-weight objects managed by the browser and loosely
@@ -441,6 +444,9 @@
                                  const CefString& scriptUrl,
                                  int startLine) OVERRIDE
     { return browser_->ExecuteJavaScript(this, jsCode, scriptUrl, startLine); }
+  virtual CefString EvaluateJavaScript(const CefString& jsCode,
+                                  long timeout) OVERRIDE
+    { return browser_->EvaluateJavaScript(this, jsCode, timeout); }
   virtual bool IsMain() OVERRIDE { return name_.empty(); }
   virtual bool IsFocused() OVERRIDE;
   virtual CefString GetName() OVERRIDE { return name_; }
Index: libcef/browser_impl.cc
===================================================================
--- libcef/browser_impl.cc	(revision 402)
+++ libcef/browser_impl.cc	(working copy)
@@ -609,6 +609,48 @@
       startLine));
 }
 
+CefString CefBrowserImpl::EvaluateJavaScript(CefRefPtr<CefFrame> frame,
+                                             const CefString& jsCode,
+                                             long timeout)
+{
+  // Verify that this method is being called on the UI thread.
+  if (!CefThread::CurrentlyOn(CefThread::UI)) {
+    NOTREACHED() << "called on invalid thread";
+    return CefString();
+  }
+
+  CefRefPtr<CefV8Context> v8Context = frame->GetV8Context();
+  CefString url = frame->GetURL();
+  
+  CefRefPtr<CefV8Value> retVal;
+  CefRefPtr<CefV8Exception> exception;
+
+  if (v8Context.get() &&
+      v8Context->Enter())
+  {
+    CefRefPtr<CefV8Value> globalObj = v8Context->GetGlobal();
+    CefRefPtr<CefV8Value> evalFunc = globalObj->GetValue("eval");
+
+    CefRefPtr<CefV8Value> arg0 = CefV8Value::CreateString(jsCode);
+
+    CefV8ValueList args;
+    args.push_back(arg0);
+
+    if (evalFunc->ExecuteFunctionWithContext(v8Context, globalObj, args, retVal,
+        exception, false))
+    {
+        return retVal->GetStringValue();
+    }
+    else
+    {
+        return CefString("ExecuteFunctionWithContext failed");
+    }
+    v8Context->Exit();
+  }
+
+  return CefString("v8Context get/enter failed");
+}
+
 CefString CefBrowserImpl::GetURL(CefRefPtr<CefFrame> frame)
 {
   // Verify that this method is being called on the UI thread.
Index: tests/cefclient/resource.h
===================================================================
--- tests/cefclient/resource.h	(revision 402)
+++ tests/cefclient/resource.h	(working copy)
@@ -1,12 +1,7 @@
-// Copyright (c) 2010 The Chromium Embedded Framework Authors. All rights
-// reserved. Use of this source code is governed by a BSD-style license that
-// can be found in the LICENSE file.
-
 //{{NO_DEPENDENCIES}}
 // Microsoft Visual C++ generated include file.
 // Used by cefclient.rc
 //
-#define BINARY                          256
 #define IDC_MYICON                      2
 #define IDD_CEFCLIENT_DIALOG            102
 #define IDS_APP_TITLE                   103
@@ -21,6 +16,18 @@
 #define IDC_NAV_FORWARD                 201
 #define IDC_NAV_RELOAD                  202
 #define IDC_NAV_STOP                    203
+#define BINARY                          256
+#define IDS_LOGO                        1000
+#define IDS_UIPLUGIN                    1001
+#define IDS_LOGOBALL                    1002
+#define IDS_LOCALSTORAGE                1003
+#define IDS_XMLHTTPREQUEST              1004
+#define IDS_DOMACCESS                   1005
+#define IDS_OSRPLUGIN                   1006
+#define IDS_MODALMAIN                   1007
+#define IDS_MODALDIALOG                 1008
+#define IDS_EXTENSIONPERF               1009
+#define IDS_TRANSPARENCY                1010
 #define ID_WARN_CONSOLEMESSAGE          32000
 #define ID_WARN_DOWNLOADCOMPLETE        32001
 #define ID_WARN_DOWNLOADERROR           32002
@@ -57,29 +64,16 @@
 #define ID_TESTS_TRANSPARENT_OSRAPP     32797
 #define ID_TESTS_JAVASCRIPT_INVOKE      32798
 #define ID_TESTS_GETIMAGE               32799
+#define ID_TESTS_JAVASCRIPT_EVALUATE    32800
 #define IDC_STATIC                      -1
-#define IDS_LOGO                        1000
-#define IDS_UIPLUGIN                    1001
-#define IDS_LOGOBALL                    1002
-#define IDS_LOCALSTORAGE                1003
-#define IDS_XMLHTTPREQUEST              1004
-#define IDS_DOMACCESS                   1005
-#define IDS_OSRPLUGIN                   1006
-#define IDS_MODALMAIN                   1007
-#define IDS_MODALDIALOG                 1008
-#define IDS_EXTENSIONPERF               1009
-#define IDS_TRANSPARENCY                1010
 
-// Avoid files associated with MacOS
-#define _X86_
-
 // Next default values for new objects
 // 
 #ifdef APSTUDIO_INVOKED
 #ifndef APSTUDIO_READONLY_SYMBOLS
 #define _APS_NO_MFC                     1
 #define _APS_NEXT_RESOURCE_VALUE        130
-#define _APS_NEXT_COMMAND_VALUE         32795
+#define _APS_NEXT_COMMAND_VALUE         32796
 #define _APS_NEXT_CONTROL_VALUE         1000
 #define _APS_NEXT_SYMED_VALUE           110
 #endif
Index: tests/cefclient/cefclient.h
===================================================================
--- tests/cefclient/cefclient.h	(revision 402)
+++ tests/cefclient/cefclient.h	(working copy)
@@ -33,6 +33,7 @@
 void RunGetTextTest(CefRefPtr<CefBrowser> browser);
 void RunRequestTest(CefRefPtr<CefBrowser> browser);
 void RunJavaScriptExecuteTest(CefRefPtr<CefBrowser> browser);
+void RunJavaScriptEvaluateTest(CefRefPtr<CefBrowser> browser);
 void RunJavaScriptInvokeTest(CefRefPtr<CefBrowser> browser);
 void RunPopupTest(CefRefPtr<CefBrowser> browser);
 void RunLocalStorageTest(CefRefPtr<CefBrowser> browser);
Index: tests/cefclient/cefclient_win.cpp
===================================================================
--- tests/cefclient/cefclient_win.cpp	(revision 402)
+++ tests/cefclient/cefclient_win.cpp	(working copy)
@@ -476,6 +476,10 @@
           if(browser.get())
             RunJavaScriptExecuteTest(browser);
           return 0;
+        case ID_TESTS_JAVASCRIPT_EVALUATE: // Test synchronous evaluation of javascript with return value
+          if (browser.get())
+            RunJavaScriptEvaluateTest(browser);
+          return 0;
         case ID_TESTS_JAVASCRIPT_INVOKE:
           if(browser.get())
             RunJavaScriptInvokeTest(browser);
Index: tests/cefclient/cefclient.rc
===================================================================
--- tests/cefclient/cefclient.rc	(revision 402)
+++ tests/cefclient/cefclient.rc	(working copy)
@@ -25,20 +25,20 @@
 
 /////////////////////////////////////////////////////////////////////////////
 //
-// Binary
+// 256
 //
 
-IDS_LOGO BINARY "res\\logo.png"
-IDS_UIPLUGIN BINARY "res\\uiplugin.html"
-IDS_OSRPLUGIN BINARY "res\\osrplugin.html"
-IDS_LOGOBALL BINARY "res\\logoball.png"
-IDS_LOCALSTORAGE BINARY "res\\localstorage.html"
-IDS_XMLHTTPREQUEST BINARY "res\\xmlhttprequest.html"
-IDS_DOMACCESS BINARY "res\\domaccess.html"
-IDS_MODALMAIN BINARY "res\\modalmain.html"
-IDS_MODALDIALOG BINARY "res\\modaldialog.html"
-IDS_EXTENSIONPERF BINARY "res\\extensionperf.html"
-IDS_TRANSPARENCY BINARY "res\\transparency.html"
+IDS_LOGO                256                     "res\\logo.png"
+IDS_UIPLUGIN            256                     "res\\uiplugin.html"
+IDS_OSRPLUGIN           256                     "res\\osrplugin.html"
+IDS_LOGOBALL            256                     "res\\logoball.png"
+IDS_LOCALSTORAGE        256                     "res\\localstorage.html"
+IDS_XMLHTTPREQUEST      256                     "res\\xmlhttprequest.html"
+IDS_DOMACCESS           256                     "res\\domaccess.html"
+IDS_MODALMAIN           256                     "res\\modalmain.html"
+IDS_MODALDIALOG         256                     "res\\modaldialog.html"
+IDS_EXTENSIONPERF       256                     "res\\extensionperf.html"
+IDS_TRANSPARENCY        256                     "res\\transparency.html"
 
 /////////////////////////////////////////////////////////////////////////////
 //
@@ -47,8 +47,8 @@
 
 // Icon with lowest ID value placed first to ensure application icon
 // remains consistent on all systems.
-IDI_CEFCLIENT           ICON                    "res\cefclient.ico"
-IDI_SMALL               ICON                    "res\small.ico"
+IDI_CEFCLIENT           ICON                    "res\\cefclient.ico"
+IDI_SMALL               ICON                    "res\\small.ico"
 
 /////////////////////////////////////////////////////////////////////////////
 //
@@ -74,9 +74,10 @@
         MENUITEM "Get Source",                  ID_TESTS_GETSOURCE
         MENUITEM "Get Text",                    ID_TESTS_GETTEXT
         MENUITEM "JavaScript Binding Handler",  ID_TESTS_JAVASCRIPT_BINDING
-        MENUITEM "JavaScript Extension Handler",ID_TESTS_JAVASCRIPT_EXTENSION
-        MENUITEM "JavaScript Extension Performance",ID_TESTS_JAVASCRIPT_PERFORMANCE
+        MENUITEM "JavaScript Extension Handler", ID_TESTS_JAVASCRIPT_EXTENSION
+        MENUITEM "JavaScript Extension Performance", ID_TESTS_JAVASCRIPT_PERFORMANCE
         MENUITEM "JavaScript Execute",          ID_TESTS_JAVASCRIPT_EXECUTE
+        MENUITEM "JavaScript Evaluate",         ID_TESTS_JAVASCRIPT_EVALUATE
         MENUITEM "JavaScript Invoke",           ID_TESTS_JAVASCRIPT_INVOKE
         MENUITEM "Plugin",                      ID_TESTS_PLUGIN
         MENUITEM "Popup Window",                ID_TESTS_POPUP
@@ -84,8 +85,8 @@
         MENUITEM "Request",                     ID_TESTS_REQUEST
         MENUITEM "Scheme Handler",              ID_TESTS_SCHEME_HANDLER
         MENUITEM "UI App Example",              ID_TESTS_UIAPP
-        MENUITEM "Off-Screen Rendering Example",ID_TESTS_OSRAPP
-        MENUITEM "Transparent Off-Screen Rendering Example",ID_TESTS_TRANSPARENT_OSRAPP
+        MENUITEM "Off-Screen Rendering Example", ID_TESTS_OSRAPP
+        MENUITEM "Transparent Off-Screen Rendering Example", ID_TESTS_TRANSPARENT_OSRAPP
         MENUITEM "Local Storage",               ID_TESTS_LOCALSTORAGE
         MENUITEM "XMLHttpRequest",              ID_TESTS_XMLHTTPREQUEST
         MENUITEM "WebURLRequest",               ID_TESTS_WEBURLREQUEST
@@ -102,7 +103,7 @@
         MENUITEM "Close Developer Tools",       ID_TESTS_DEVTOOLS_CLOSE
         MENUITEM "Modal Dialog",                ID_TESTS_MODALDIALOG
         MENUITEM "Get Image",                   ID_TESTS_GETIMAGE
-   END
+    END
 END
 
 
Index: tests/cefclient/cefclient.cpp
===================================================================
--- tests/cefclient/cefclient.cpp	(revision 402)
+++ tests/cefclient/cefclient.cpp	(working copy)
@@ -18,6 +18,23 @@
 
 namespace {
 
+void UIT_EvaluateScript(CefRefPtr<CefBrowser> browser)
+{
+  REQUIRE_UI_THREAD();
+
+  CefRefPtr<CefFrame> frame = browser->GetMainFrame();
+  CefString url = frame->GetURL();
+
+  CefString jsCode = "2+2";
+  CefString retVal = frame->EvaluateJavaScript(jsCode, 0);
+  frame->ExecuteJavaScript(
+      std::string("alert('" +
+      jsCode.ToString() +
+      " => " +
+      retVal.ToString() +
+      "!');"), url, 0);
+}
+
 void UIT_InvokeScript(CefRefPtr<CefBrowser> browser)
 {
   REQUIRE_UI_THREAD();
@@ -408,6 +425,16 @@
       "alert('JavaScript execute works!');", "about:blank", 0);
 }
 
+void RunJavaScriptEvaluateTest(CefRefPtr<CefBrowser> browser)
+{
+  if (CefCurrentlyOn(TID_UI)) {
+    UIT_EvaluateScript(browser);
+  } else {
+    // Execute on the UI thread.
+    CefPostTask(TID_UI, NewCefRunnableFunction(&UIT_EvaluateScript, browser));
+  }
+}
+
 void RunJavaScriptInvokeTest(CefRefPtr<CefBrowser> browser)
 {
   if (CefCurrentlyOn(TID_UI)) {
